1.数据查看

# 查空值
SELECT *
FROM master
WHERE user_id is null and order_date is null and product is null and amount is null


#查日期
SELECT *
FROM master
WHERE order_date BETWEEN '20220101' and '20231231'


#查价格
SELECT amount
from master
where amount < 0


#改日期格式
ALTER TABLE master modify order_date DATE


#创建视图，数据为2022年-2023年发生的所有交易数据的数据
CREATE or replace VIEW view_order_date as 
SELECT user_id,
			 date_format(order_date,'%Y-%m') as order_date,  #只取年月
			 product,
			 amount
FROM master


2.订单商品数及订单金额的趋势
SELECT order_date,count(product) 订单商品数,ROUND(sum(amount),2) 订单金额
FROM view_order_date
GROUP BY order_date
ORDER BY order_date


3.用户的主要活跃时间
SELECT order_date,count(product) 购买总数,sum(amount) 购买总金额
FROM view_order_date
GROUP BY order_date
ORDER BY 购买总数 desc


4.新增用户的数量、趋势如何？
SELECT 
order_date,
当月总人数,
当月总人数 - lag(当月总人数) over(ORDER BY order_date)  #lag返回按order_date排序当月总人数。当前行是第一个行，则返回NULL
from(
SELECT order_date,count(user_id) 当月总人数
FROM view_order_date
GROUP BY order_date
ORDER BY order_date
) as a


5.用户每个月的月活、留存、转化情况 

#月活  当月有消费的用户定义为活跃用户
CREATE or replace VIEW yh_view as 
SELECT order_date,
			 sum(case when amount > 0 then 1 else 0 end) 消费用户,
			 sum(case when amount = 0 then 1 else 0 end) 未消费用户,
			 count(user_id) 总用户,
			 sum(case when amount > 0 then 1 else 0 end)/count(user_id)月活率
FROM view_order_date
GROUP BY order_date
ORDER BY order_date



#月留存
SELECT  
    t1.order_date 日期1,  
    t1.people1 人数1,  
    t2.order_date 日期2,  
    t2.people2 人数2 ,  
    ROUND((CASE WHEN t2.people2 = 0 THEN NULL  -- 避免除以零  
		ELSE (t1.people1 * 1.0 / t2.people2) * 100 END),2) 留存率
FROM  
    (SELECT 
		order_date, 
		count(user_id) as people1
		FROM view_order_date 
		GROUP BY order_date) t1  
		
LEFT JOIN  
    (SELECT 
    DATE_SUB(order_date, INTERVAL 1 MONTH) AS order_date,  -- 计算 t2 的时间为 t1 时间的前一个月
    count(user_id) as people2
    FROM view_order_date 
    GROUP BY DATE_SUB(order_date, INTERVAL 1 MONTH)) t2
ON  
    t1.order_date = t2.order_date  -- 将t1的时间减去一个月，t2拼到对应的时间上  
ORDER BY  
    t1.order_date



#复购率
CREATE or replace VIEW fg_view as
#没人每月的购物次数sum_p
SELECT order_date,user_id,count(user_id) sum_p
from view_order_date
WHERE amount > 0
GROUP BY order_date,user_id
ORDER BY order_date

#购物次数sum_p>1，则为复购人数
SELECT
order_date 日期,sum(case when sum_p > 1 then 1 else 0 end) 复购人数,COUNT(user_id) 总人数,sum(case when sum_p > 1 then 1 else 0 end)/COUNT(user_id) 复购率
from fg_view
GROUP BY order_date


#回购率
#根据商品product分组，统计每个人的购买次数
CREATE or replace VIEW buy_view as 
SELECT order_date,product,user_id,count(user_id) 购买次数
FROM view_order_date
WHERE amount >0
GROUP BY order_date,product,user_id
ORDER BY order_date,product,user_id

#购买次数>2则定义这个人回购
SELECT 
order_date,
sum(case when 购买次数 >1 then 1 else 0 end) 回购人数,
count(购买次数) 购买总人数,
sum(case when 购买次数 >1 then 1 else 0 end)/count(购买次数) 回购率
FROM buy_view
GROUP BY order_date
ORDER BY order_date



6.网站的每个月的收入、ARPU（平均每位用户收入）

-- 一个人一个月可能消费多次，计算ARPU时只能作为一人来计算
CREATE or replace VIEW income_view as 
SELECT v.order_date,sum(amount) 总消费,a.c 每月消费总人数,sum(amount)/a.c ARPU
FROM view_order_date v

LEFT JOIN(
SELECT order_date,count(user_id) c
FROM fg_view 
GROUP BY order_date
) as a

on v.order_date = a.order_date
GROUP BY order_date,a.c
ORDER BY order_date



7.用户生命周期和生命周期价值的情况
定义如下：
用户生命周期：用户自第一次消费至最后一次消费的间隔天数。
生命周期价值（LTV）：用户在生命周期内的消费总额。

CREATE or replace VIEW life_view as 
SELECT 
user_id 用户,
max(order_date) 最后一次消费,
min(order_date) 第一次消费,
DATEDIFF(max(order_date),min(order_date)) 间隔天数,
ROUND(sum(amount)) LTV
FROM master
GROUP BY user_id
ORDER BY user_id


8.用户平均消费间隔天数

SELECT 用户,间隔天数,buy,ROUND(间隔天数/buy) 平均消费间隔天数
FROM life_view l
LEFT JOIN (
SELECT user_id,sum(购买次数) buy
FROM buy_view
GROUP BY user_id) b
on l.用户 = b.user_id

